name: GeoSite
on:
  workflow_dispatch:
  #schedule:
    #- cron: "30 22 * * *"
  push:
    branches:
      - master
    paths-ignore:
      - "**/README.md"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      #- name: Setup Go 1.x.y
        #uses: actions/setup-go@v3
        #with:
          #go-version: ^1.18

      - name: Run & Move
        run: |
          git clone https://github.com/Slotheve/GeoSite.git
          chmod -R 777 GeoSite
          cd GeoSite
          wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/direct-list.txt
          sed -i '/^.*microsoft.*/d' direct-list.txt
          sed -i '/^.*speedtest*.*/d' direct-list.txt
          sed -i '/^.*apple*.*/d' direct-list.txt
          sed -i '/^.*icloud*.*/d' direct-list.txt
          sed -i '/^.*mzstatic*.*/d' direct-list.txt
          sed -i '/^.*xdmb*.*/d' direct-list.txt
          sed -i '/^.*akadns*.*/d' direct-list.txt
          sed -i '/^.*edgekey*.*/d' direct-list.txt
          sed -i '/^.*aaplimg*.*/d' direct-list.txt
          wget https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/reject-list.txt
          mv direct-list.txt sites/cn
          mv reject-list.txt sites/reject
          ./v2sitedat
          sha256sum geosite.dat > geosite.dat.sha256sum
          mkdir -p publish
          cp sites/* publish/
          cp geosite.dat publish
          cp geosite.dat.sha256sum publish

      - name: Generate release tag
        id: tag
        run: |
          echo "release_tag=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
          echo "release_date=$(date +"%Y.%m.%d")" >> $GITHUB_OUTPUT
          echo "status=success" >> $GITHUB_OUTPUT

      - name: Upload files to release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ steps.tag.outputs.release_date }}
          tag_name: ${{ steps.tag.outputs.release_tag }}
          draft: false
          prerelease: false
          files: |
            ./GeoSite/publish/*

      - name: Remove old Releases
        uses: dev-drprasad/delete-older-releases@v0.2.0
        if: env.UPLOAD_RELEASE == 'true' && !cancelled()
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            keep_latest: 20
            delete_tags: true

      - name: Git push assets to "release" branch
        run: |
          cd GeoSite/publish || exit 1
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add .
          git commit -m "${{ steps.tag.outputs.release_date }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
